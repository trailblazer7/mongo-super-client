{
  "_args": [
    [
      {
        "raw": "nw@^0.18.2",
        "scope": null,
        "escapedName": "nw",
        "name": "nw",
        "rawSpec": "^0.18.2",
        "spec": ">=0.18.2 <0.19.0",
        "type": "range"
      },
      "C:\\files\\projects\\mongo-super-client"
    ]
  ],
  "_from": "nw@>=0.18.2 <0.19.0",
  "_id": "nw@0.18.8",
  "_inCache": true,
  "_location": "/nw",
  "_nodeVersion": "6.8.1",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/nw-0.18.8.tgz_1479927750654_0.09919710364192724"
  },
  "_npmUser": {
    "name": "mithgol",
    "email": "getgit@mithgol.ru"
  },
  "_npmVersion": "3.10.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "nw@^0.18.2",
    "scope": null,
    "escapedName": "nw",
    "name": "nw",
    "rawSpec": "^0.18.2",
    "spec": ">=0.18.2 <0.19.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/nw/-/nw-0.18.8.tgz",
  "_shasum": "23f71fe97f6fd30d3711f4ee3e9804d44051f627",
  "_shrinkwrap": null,
  "_spec": "nw@^0.18.2",
  "_where": "C:\\files\\projects\\mongo-super-client",
  "author": {
    "name": "Kyle Robinson Young"
  },
  "bin": {
    "nw": "bin/nw"
  },
  "bugs": {
    "url": "https://github.com/nwjs/npm-installer/issues"
  },
  "dependencies": {
    "chalk": "~1.1.3",
    "decompress": "^3.0.0",
    "download": "^4.4.3",
    "file-exists": "^2.0.0",
    "merge": "^1.2.0",
    "multimeter": "^0.1.1",
    "rimraf": "^2.2.8",
    "semver": "^5.1.0",
    "yargs": "^3.2.1"
  },
  "description": "A installer for nw.js",
  "devDependencies": {
    "request": "^2.53.0",
    "tape": "^3.5.0"
  },
  "directories": {},
  "dist": {
    "shasum": "23f71fe97f6fd30d3711f4ee3e9804d44051f627",
    "tarball": "https://registry.npmjs.org/nw/-/nw-0.18.8.tgz"
  },
  "files": [
    "lib",
    "bin",
    "scripts",
    "index.js"
  ],
  "gitHead": "a7b5234d41bea271d50164c9046c3211a5a6496f",
  "homepage": "https://github.com/nwjs/npm-installer#readme",
  "keywords": [
    "nw",
    "nw.js",
    "nwjs",
    "chromium",
    "io.js",
    "node-webkit",
    "webkit",
    "installer",
    "desktop",
    "application"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "mithgol",
      "email": "getgit@mithgol.ru"
    },
    {
      "name": "rogerwang",
      "email": "wenrui@gmail.com"
    },
    {
      "name": "shama",
      "email": "kyle@dontkry.com"
    }
  ],
  "name": "nw",
  "optionalDependencies": {},
  "readme": "# nw [![Build Status](http://img.shields.io/travis/nwjs/npm-installer.svg)](https://travis-ci.org/nwjs/npm-installer)\r\n\r\nAn installer for [nw.js](https://github.com/nwjs/nw.js).\r\n\r\n> nw.js is an app runtime based on Chromium and io.js. For building desktop applications that will run on OSX, Windows and Linux.\r\n\r\n[![NPM](https://nodei.co/npm/nw.png?downloads=true)](https://nodei.co/npm/nw/)\r\n\r\n## usage\r\nInstall locally to your project with: `npm install nw` and then in your `package.json` add a script:\r\n\r\n```json\r\n{\r\n  \"scripts\": {\r\n    \"start\": \"nw\"\r\n  }\r\n}\r\n```\r\n\r\nNow it will run your local project when you type `npm start`.\r\n\r\nIf your project is in another folder, add the path to the project `\"start\": \"nw path/to/app\"`.\r\n\r\nYou could also call the binary directly with `node_modules/.bin/nw` instead of adding to your `package.json`.\r\n\r\n### global\r\nYou can also install globally with `npm install nw -g` and then in any project type `nw` to run the project. Installing locally is recommended though as each project can have its own dependent version of nw.js.\r\n\r\n## example\r\nIf you want a really quick example try this:\r\n\r\n1. `git clone https://github.com/zcbenz/nw-sample-apps && cd nw-sample-apps`\r\n2. `npm init`\r\n3. `npm install nw`\r\n4. `\"node_modules/.bin/nw\" file-explorer`\r\n\r\nand now you should see a file explorer demo app.\r\n\r\n## command line options\r\nThere are a few (platform-specific) arguments you can pass to the `nw` executable to\r\ncustomize your nw.js application:\r\n\r\n* `--mac_plist <path-to-plist-file>`: (OS X only) Copies the given file to Info.plist in the app\r\n  bundle. This lets you do things like change your app's name and point to a different icon.\r\n\r\n* `--mac_icon <path-to-icns-file>`: (OS X only) Copies the given .icns file to the Resources/ dir\r\n  in the app bundle. You will need to point to the file with a custom plist file as well (see\r\n  `--mac_list`)\r\n\r\n**NOTE**: These options will keep the copied files in the app bundle for as long as the bundle is\r\non the filesystem (they're not deleted between app invocations). As a result, they're not\r\nrecommended if you installed nw globally using `-g`.  Also note that\r\n[OS X caches these files](http://proteo.me.uk/2011/08/mac-application-bundle-caching/),\r\nso you may need to manually clear these cached files during development.\r\n\r\n## install a specific version of nw.js\r\n\r\nTo install a specific version of nw.js use npm with the specific version: `npm install nw@0.12.0`\r\n\r\n> *Please note:* This npm package version tracks the version of nw.js that will be installed, with an additional build number that is used for revisions to the installer. As such `0.12.0-1` and `0.12.0-2` will both install `nw.js@0.12.0` but the latter has newer changes to the installer.\r\n\r\nYou may use `npm view nw versions` to view the list of available versions.\r\n\r\n## install a specific build type of nw.js\r\n\r\nnw.js has three build types: `normal`, `sdk` and `nacl`. To install a specific build type you may set npm config property `nwjs_build_type`, environment variable `NWJS_BUILD_TYPE` or pass command line option `--nwjs_build_type`:\r\n\r\n``` shell\r\nnpm install nw --nwjs_build_type=sdk\r\n```\r\n\r\nSetting option in `.npmrc` file (https://www.npmjs.org/doc/files/npmrc.html):\r\n\r\n```\r\nnwjs_build_type=sdk\r\n```\r\n\r\nSetting environment variable `NWJS_BUILD_TYPE`:\r\n\r\n``` shell\r\nexport NWJS_BUILD_TYPE=sdk\r\n```\r\n\r\nYou can alternatively install `sdk` build by specifying `-sdk` suffix in version:\r\n\r\n``` shell\r\nnpm install nw@0.13.3-sdk\r\n```\r\n\r\n## finding the path to the nw.js binary\r\n\r\nIf you would like to programmatically retrieve the path to the nw.js binary use:\r\n\r\n``` js\r\nvar findpath = require('nw').findpath;\r\nvar nwpath = findpath();\r\n// nwpath will equal the path to the binary depending on your environment\r\n```\r\n\r\n## retrieve binaries from custom download location or file path\r\n\r\nThe installer attempts to download binaries from the default location of `http://dl.nwjs.io/v`. You can override this by setting the npm config property `nwjs_urlbase` on the command line by passing the `--nwjs_urlbase` option:\r\n\r\n``` shell\r\nnpm install nw --nwjs_urlbase=http://my.own.location/somewhere\r\n```\r\n\r\nor adding it to your `.npmrc` file (https://www.npmjs.org/doc/files/npmrc.html):\r\n\r\n```\r\nnwjs_urlbase=http://my.own.location/somewhere\r\n```\r\n\r\nYou can alternatively set an environment variable `NWJS_URLBASE`:\r\n\r\n``` shell\r\nexport NWJS_URLBASE=http://my.own.location/somewhere\r\n```\r\n\r\nThe installer supports `file://` URLs to retrieve files from the local filesystem:\r\n\r\n``` shell\r\nexport NWJS_URLBASE=file:///home/bilbo/my/own/mirror\r\n```\r\n\r\n## using a proxy with or without authentication\r\n\r\nIf you are behind a proxy server you have to set an environment variable ```http_proxy``` with proxy servers url:\r\n\r\n```\r\nexport http_proxy=\"http://username:password@myproxy.com:8080\"\r\n```\r\n\r\nor\r\n\r\n```\r\nexport http_proxy=\"http://myproxy.com:8080\"\r\n```\r\n\r\n## license\r\n[nw.js](https://github.com/nwjs/nw.js)'s code and this installer use the MIT license.\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/nwjs/npm-installer.git"
  },
  "scripts": {
    "postinstall": "node scripts/install.js",
    "test": "node test/index.js"
  },
  "version": "0.18.8"
}
